<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Admins-MacBook-Pro.local" failures="1" tests="88" name="Test" time="16.834" errors="0" timestamp="2025-01-07T15:43:28 IST">
  <testcase classname="bearerTokenGenerate.TestsBearerTokenGenerate" name="testOrderFlowGenerateToken" time="2.765"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsBeforeCreateOrder" time="0.425"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositivecreateOrder" time="0.409"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterCreateOrder" time="0.258"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveBatchAssign" time="0.177"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterBatchAssign" time="0.203"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveMarkPacked" time="0.127"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterMarkPacked" time="0.199"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveCreateShipment" time="0.421"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterCreateShipment" time="0.192"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveDispatch" time="0.161"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterDispatch" time="0.161"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveMarkShipped" time="0.114"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterMarkShipped" time="0.197"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInvoiceNumber" time="0.12"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterInvoiceNumber" time="0.189"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveDeliver" time="0.122"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterDeliver" time="0.175"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveActionCompleteQC" time="0.111"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterActionCompleteQC" time="0.182"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveAcceptItemQC" time="0.123"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterAcceptItemQC" time="0.159"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveCompleteQC" time="0.109"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterCompleteQC" time="0.162"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventorySettlement" time="0.163"/>
  <testcase classname="orderFlowPositive.TestsOrderFlowPositive" name="testOrderFlowPositiveInventoryDetailsAfterInventorySettlement" time="0.15"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsBeforeCreateOrder" time="0.175"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativecreateOrder" time="0.148"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterCreateOrder" time="0.167"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeBatchAssign" time="0.132"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterBatchAssign" time="0.154"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeMarkPacked" time="0.112"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterMarkPacked" time="0.143"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeCreateShipment" time="0.137"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterCreateShipment" time="0.157"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeDispatch" time="0.133"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterDispatch" time="0.148"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeMarkShipped" time="0.098"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterMarkShipped" time="0.138"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInvoiceNumber" time="0.113"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterInvoiceNumber" time="0.173"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeDeliver" time="0.099"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterDeliver" time="0.137"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeActionCompleteQC" time="0.106"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterActionCompleteQC" time="0.141"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeRejectItemQC" time="0.105"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterRejectItemQC" time="0.145"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeCompleteQC" time="0.115"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterCompleteQC" time="0.176"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventorySettlement" time="0.127"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterInventorySettlement" time="0.136"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeOrderIdReturn" time="0.079"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryAfterDetailsOrderIdReturn" time="0.134"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeActionCompleteQCReturn" time="0.113"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterActionCompleteQCReturn" time="0.157"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeAcceptItemQCReturn" time="0.098"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterAcceptItemQCReturn" time="0.141"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeCompleteQCReturn" time="0.104"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterCompleteQCReturn" time="0.137"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventorySettlementReturn" time="0.135"/>
  <testcase classname="orderFlowNegative.TestsOrderFlowNegative" name="testOrderFlowNegativeInventoryDetailsAfterInventorySettlementReturn" time="0.134"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitInventoryDetailsBeforeCreateOrder" time="0.143"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitCreateOrder" time="0.15"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitInventoryDetailsAfterCreateOrder" time="0.134"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitSplitOrder" time="0.178"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitInventoryDetailsAfterSplitOrder" time="0.149"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitSplitNewOrder" time="0.142"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitInventoryDetailsAfterSplitNewOrder" time="0.159"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitSplitOrderAgain" time="0.094"/>
  <testcase classname="orderSplit.TestsOrderSplit" name="testOrderSplitInventoryDetailsAfterSplitOrderAgain" time="0.142"/>
  <testcase classname="orderCancelCreateOrder.TestsOrderCancelCreateOrder" name="testOrderCancelCreateOrderInventoryDetailsBeforeCreateOrder" time="0.137"/>
  <testcase classname="orderCancelCreateOrder.TestsOrderCancelCreateOrder" name="testOrderCancelCreateOrderCreateOrder" time="0.148"/>
  <testcase classname="orderCancelCreateOrder.TestsOrderCancelCreateOrder" name="testOrderCancelCreateOrderInventoryDetailsAfterCreateOrder" time="0.141"/>
  <testcase classname="orderCancelCreateOrder.TestsOrderCancelCreateOrder" name="testOrderCancelCreateOrderCancelOrder" time="0.119"/>
  <testcase classname="orderCancelCreateOrder.TestsOrderCancelCreateOrder" name="testOrderCancelCreateOrderInventoryDetailsAfterCancelOrder" time="0.137"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsBeforeCreateOrder" time="0.128"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchCreateOrder" time="0.214"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsAfterCreateOrder" time="0.172"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchBatchAssign" time="0.418"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsAfterBatchAssign" time="0.145"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchMarkPacked" time="0.096"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsAfterMarkPacked" time="0.136"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchCreateShipment" time="0.149"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsAfterCreateShipment" time="0.135"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchDispatch" time="0.135"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsAfterDispatch" time="0.146"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchUpdateOrder" time="0.153"/>
  <testcase classname="orderUpdateDispatch.TestsOrderUpdateDispatch" name="testOrderUpdateDispatchInventoryDetailsAfterUpdateOrder" time="0.132">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	Pending Stock value Before Create Order is: 167, New Ordered Quantity is: 7, Expected Pending Stock value (Pending Stock Value Before Updating Order + New Ordered Quantity) After Update Order is: 174, But Actual Pending Stock value After Update Order is: 172. Incorrect,
	Expected Intransient Stock value (Intransient Stock value After Update Order = Intransient Stock value Before Create Order) After Update Order is: 88 But Actual Intransient Stock value After Update Order is: 90. Incorrect,
	Expected Available Stock value (Available Stock value After Update Order = Available Stock value Before Create Order) After Update Order is: 99906 But Actual Available Stock value After Update Order is: 99904. Incorrect">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
Pending Stock value Before Create Order is: 167, New Ordered Quantity is: 7, Expected Pending Stock value (Pending Stock Value Before Updating Order + New Ordered Quantity) After Update Order is: 174, But Actual Pending Stock value After Update Order is: 172. Incorrect,
Expected Intransient Stock value (Intransient Stock value After Update Order = Intransient Stock value Before Create Order) After Update Order is: 88 But Actual Intransient Stock value After Update Order is: 90. Incorrect,
Expected Available Stock value (Available Stock value After Update Order = Available Stock value Before Create Order) After Update Order is: 99906 But Actual Available Stock value After Update Order is: 99904. Incorrect
at orderUpdateDispatch.TestsOrderUpdateDispatch.testOrderUpdateDispatchInventoryDetailsAfterUpdateOrder(TestsOrderUpdateDispatch.java:543)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testOrderUpdateDispatchInventoryDetailsAfterUpdateOrder -->
</testsuite> <!-- Test -->
